name: Deploy to GitHub Pages

on:
  push:
    branches:
      - main # Or your main branch name

permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3

      - name: Debug Secret Content üïµÔ∏è
        run: |
          echo "Checking if secret is set..."
          if [ -z "${{ secrets.FIREBASE_CONFIG }}" ]; then
            echo "::error::FIREBASE_CONFIG secret is not set or is empty."
            exit 1
          fi
          echo "Secret is present."
          SECRET_CONTENT="${{ secrets.FIREBASE_CONFIG }}"
          echo "Secret content length: ${#SECRET_CONTENT}"
          FIRST_CHARS=$(echo "$SECRET_CONTENT" | cut -c 1-15)
          LAST_CHARS=$(echo "$SECRET_CONTENT" | rev | cut -c 1-15 | rev)
          echo "Secret starts with: '$FIRST_CHARS...'"
          echo "Secret ends with: '...$LAST_CHARS'"

      - name: Replace Firebase Config and Verify ‚öôÔ∏è
        env:
          FIREBASE_SECRET: ${{ secrets.FIREBASE_CONFIG }}
        run: |
          echo "Attempting to replace placeholder using perl..."
          # Using perl is more robust for multiline/quoted strings than sed or awk,
          # as it reads the environment variable directly, avoiding shell quoting issues.
          perl -i -pe 's/"%%FIREBASE_CONFIG%%"/${ENV{FIREBASE_SECRET}}/g' index.html
          
          echo "Verifying replacement..."
          if grep -q "%%FIREBASE_CONFIG%%" index.html; then
            echo "::error::Placeholder replacement failed. Please triple-check the FIREBASE_CONFIG secret format in your repository settings."
            exit 1
          else
            echo "Placeholder was replaced successfully."
          fi

      - name: Deploy üöÄ
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: .

